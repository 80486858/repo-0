apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "conntrack-stats-exporter.fullname" . }}
  labels:
    app: {{ include "conntrack-stats-exporter.name" . }}
    chart: {{ include "conntrack-stats-exporter.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "conntrack-stats-exporter.name" . }}
      release: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "100%"
  template:
    metadata:
      labels:
        app: {{ include "conntrack-stats-exporter.name" . }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: '{{ .Values.scrape }}'
        prometheus.io/port: '{{ .Values.port }}'
    spec:
      hostNetwork: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.port }}
        args: [ "--addr=:{{ . }}" ]
        {{- end }}
        ports:
        - name: metrics
          containerPort: {{ .Values.port }}
          hostPort: {{ .Values.port }}
          protocol: TCP
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        {{- with .Values.resources }}
        resources:
{{ toYaml . | indent 12 }}
        {{- end }}
