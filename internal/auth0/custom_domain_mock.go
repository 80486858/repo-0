// Code generated by MockGen. DO NOT EDIT.
// Source: custom_domain.go

// Package auth0 is a generated GoMock package.
package auth0

import (
	gomock "github.com/golang/mock/gomock"
	management "gopkg.in/auth0.v5/management"
	reflect "reflect"
)

// MockCustomDomainAPI is a mock of CustomDomainAPI interface
type MockCustomDomainAPI struct {
	ctrl     *gomock.Controller
	recorder *MockCustomDomainAPIMockRecorder
}

// MockCustomDomainAPIMockRecorder is the mock recorder for MockCustomDomainAPI
type MockCustomDomainAPIMockRecorder struct {
	mock *MockCustomDomainAPI
}

// NewMockCustomDomainAPI creates a new mock instance
func NewMockCustomDomainAPI(ctrl *gomock.Controller) *MockCustomDomainAPI {
	mock := &MockCustomDomainAPI{ctrl: ctrl}
	mock.recorder = &MockCustomDomainAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCustomDomainAPI) EXPECT() *MockCustomDomainAPIMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockCustomDomainAPI) Create(r *management.CustomDomain, opts ...management.RequestOption) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{r}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Create", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockCustomDomainAPIMockRecorder) Create(r interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{r}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCustomDomainAPI)(nil).Create), varargs...)
}

// Read mocks base method
func (m *MockCustomDomainAPI) Read(id string, opts ...management.RequestOption) (*management.CustomDomain, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{id}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Read", varargs...)
	ret0, _ := ret[0].(*management.CustomDomain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read
func (mr *MockCustomDomainAPIMockRecorder) Read(id interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{id}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockCustomDomainAPI)(nil).Read), varargs...)
}

// Verify mocks base method
func (m *MockCustomDomainAPI) Verify(id string, opts ...management.RequestOption) (*management.CustomDomain, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{id}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Verify", varargs...)
	ret0, _ := ret[0].(*management.CustomDomain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify
func (mr *MockCustomDomainAPIMockRecorder) Verify(id interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{id}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockCustomDomainAPI)(nil).Verify), varargs...)
}

// Delete mocks base method
func (m *MockCustomDomainAPI) Delete(id string, opts ...management.RequestOption) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{id}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Delete", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockCustomDomainAPIMockRecorder) Delete(id interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{id}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockCustomDomainAPI)(nil).Delete), varargs...)
}

// List mocks base method
func (m *MockCustomDomainAPI) List(opts ...management.RequestOption) ([]*management.CustomDomain, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "List", varargs...)
	ret0, _ := ret[0].([]*management.CustomDomain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockCustomDomainAPIMockRecorder) List(opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockCustomDomainAPI)(nil).List), opts...)
}
