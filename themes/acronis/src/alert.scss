@import 'common/variables';
@import 'common/mixins';

@include b(alert) {
  display: flex;
  min-height: 40px;
  overflow: hidden;
  background-clip: padding-box;
  color: $av-fixed-primary;

  @include e(container) {
    display: flex;
    flex: 1;
    padding: 8px 24px;
  }

  @include e(close) {
    color: $av-brand-primary;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 64px;
    min-height: 100%;
    border-left: $av-border-sm $av-brand-accent;

    &:hover {
      cursor: pointer;
    }
  }

  @include e(icon) {
    font-size: 0;
    display: flex;
    align-items: center;
    margin-right: 16px;
    height: $av-line-height-s;
  }

  @include e(content) {
    flex: 1;
    word-break: break-word;
    line-height: $av-line-height-s;
    font-size: $av-font-size-xs;
  }

  @include e(title) {
    font-size: $av-font-size-xs;
    line-height: $av-line-height-s;
    font-weight: $av-font-weight-bold;
  }

  @include e(actions) {
    margin: 8px 0 0 0;
    line-height: $av-line-height-m;
    font-size: $av-font-size-xs;
    display: flex;

    > .el-button--ghost {
      margin-left: -8px;

      + .el-button.el-button--ghost:not(.is-fluid) {
        margin-left: 0;
      }
    }
  }

  @include e(actions-right) {
    display: flex;
    align-items: center;
    padding-right: 24px;
  }

  // apply statuses (modifiers): info, success, warning, critical, error, unknown
  @include notification-modifiers();

  @include m(error) {
    &.el-alert--transparent {
      background-color: $av-fixed-danger-accent;
    }
  }

  @include m(info) {
    &.el-alert--transparent {
      background-color: $av-fixed-info-accent;
    }
  }

  @include m(success) {
    &.el-alert--transparent {
      background-color: $av-fixed-success-accent;
    }
  }

  @include m(critical) {
    &.el-alert--transparent {
      background-color: $av-fixed-critical-accent;
    }
  }

  @include m(warning) {
    &.el-alert--transparent {
      background-color: $av-fixed-warning-accent;
    }
  }

  @include m(with-top-border) {
    box-shadow: 0 $av-border-width-sm 0 $av-brand-accent inset;
  }

  @include m(with-bottom-border) {
    box-shadow: 0 #{-$av-border-width-sm} 0 $av-brand-accent inset;
  }

  @include m(with-top-bottom-borders) {
    box-shadow: 0 $av-border-width-sm 0 $av-brand-accent inset, 0 #{-$av-border-width-sm} 0 $av-brand-accent inset;
  }

  @include m(with-card) {
    border-radius: $av-border-radius-2;
  }

  @include m(ribbon) {
    height: 40px;
    align-items: center;

    .el-alert__container {
      margin: 0 auto;
      flex: inherit;
    }
  }
}

.el-alert-fade-enter,
.el-alert-fade-leave-active {
  opacity: 0;
}

.el-alert-advance {
  &__wrapper {
    flex: 1;
    //padding-top: 8px;
  }

  &__pseudo-icon {
    padding-left: 32px;
  }

  &__subtitle {
    color: $av-fixed-light;
    font-size: $av-font-size-xs;
  }

  &__content-block {
    background-color: $av-fixed-white;
    position: relative;

    &__text {
      padding: 8px 16px;
    }

    &::before {
      position: absolute;
      width: 4px;
      height: 100%;
      content: '';
      display: block;
    }

    $types: (
      'info': $av-fixed-info,
      'success': $av-fixed-success,
      'warning': $av-fixed-warning,
      'critical': $av-fixed-critical,
      'error': $av-fixed-error,
    );

    @each $type, $color in $types {
      &--#{$type} {
        &::before {
          background: $color;
        }
      }
    }
  }
}
