@mixin b($block) {
  $B: $namespace + '-' + $block !global;

  .#{$B} {
    @content;
  }
}

@mixin e($element) {
  $E: $element !global;
  $selector: &;
  $currentSelector: '';

  @each $unit in $element {
    $currentSelector: #{$currentSelector + '.' + $B + $element-separator + $unit + ','};
  }

  @if hitAllSpecialNestRule($selector) {
    @at-root {
      #{$selector} {
        #{$currentSelector} {
          @content;
        }
      }
    }
  } @else {
    @at-root {
      #{$currentSelector} {
        @content;
      }
    }
  }
}

@mixin m($modifier, $value: false) {
  $selector: &;
  $currentSelector: '';

  @if ($value) {
    $currentSelector: #{& + $modifier-separator + $modifier + $modifier-value-separator + $value};
  } @else {
    @each $unit in $modifier {
      $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ','};
    }
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

@mixin when($states) {
  @each $state in $states {
    @at-root {
      #{if(&, '&.#{$state-prefix + $state}','#{$state-prefix + $state}')} {
        @content;
      }
    }
  }
}

@mixin extend-rule($name) {
  @extend #{'%shared-' + $name};
}

@mixin share-rule($name) {
  $rule-name: '%shared-' + $name;

  @at-root #{$rule-name} {
    @content;
  }
}

@mixin pseudo($pseudo) {
  @at-root #{&}#{':#{$pseudo}'} {
    @content;
  }
}
