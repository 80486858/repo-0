@mixin tag {
  $height: 24px;

  @include text-accent;

  box-sizing: border-box;
  display: inline-block;
  vertical-align: middle;
  max-width: 100%;
  padding: 0 8px;
  text-align: center;
  line-height: $height;
  border-radius: $height * .5;
  position: relative;

  &__text {
    @include utils-ellipsis;

    display: inline-block;
    max-width: 100%;
    vertical-align: top;
  }

  @content;
}

@mixin tag-small {
  line-height: 16px;
  border-radius: 8px;
  font-size: 11px;
}

@mixin tag-info {
  background-color: $av-fixed-info-accent;
  border: $av-border-sm $av-fixed-info;
  color: $av-fixed-info-dark;

  @include when(inverse) {
    background-color: $av-fixed-info-light;
    border: $av-border-sm $av-fixed-info-light;
  }

  @include when(small) {
    @include tag-small;
  }
}

@mixin tag-success {
  background-color: $av-fixed-success-accent;
  border: $av-border-sm $av-fixed-success;
  color: $av-fixed-success-dark;

  @include when(inverse) {
    background-color: $av-fixed-success-light;
    border: $av-border-sm $av-fixed-success-light;
  }

  @include when(small) {
    @include tag-small;
  }
}

@mixin tag-warning {
  background-color: $av-fixed-warning-accent;
  border: $av-border-sm $av-fixed-warning;
  color: $av-fixed-warning-dark;

  @include when(inverse) {
    background-color: $av-fixed-warning-light;
    border: $av-border-sm $av-fixed-warning-light;
  }

  @include when(small) {
    @include tag-small;
  }
}

@mixin tag-critical {
  background-color: $av-fixed-critical-accent;
  border: $av-border-sm $av-fixed-critical;
  color: $av-fixed-critical-dark;

  @include when(inverse) {
    background-color: $av-fixed-critical-light;
    border: $av-border-sm $av-fixed-critical-light;
  }

  @include when(small) {
    @include tag-small;
  }
}

@mixin tag-danger {
  background-color: $av-fixed-danger-accent;
  border: $av-border-sm $av-fixed-danger;
  color: $av-fixed-danger-dark;

  @include when(inverse) {
    background-color: $av-fixed-danger-light;
    border: $av-border-sm $av-fixed-danger-light;
  }

  @include when(small) {
    @include tag-small;
  }
}

@mixin tag-inactive {
  background-color: $av-fixed-invisible;
  border: $av-border-sm $av-fixed-lighter;
  color: $av-fixed-light;

  @include when(small) {
    @include tag-small;
  }
}

@mixin tag-adaptive {
  background-color: var(--el-tag-adaptive-bg);
  border: $av-border-sm var(--el-tag-adaptive-border-clr);
  color: var(--el-tag-adaptive-fg);

  @include when(small) {
    @include tag-small;
  }
}

@mixin tag-white {
  @include when(inverse) {
    background-color: $av-fixed-white;
    color: $av-fixed-primary;
    border: $av-border-sm $av-fixed-white;
  }

  @include when(small) {
    @include tag-small;
  }
}

@mixin tag-accent {
  color: $av-fixed-white;
  background-color: $av-fixed-nav-accent;

  &::after {
    border-color: $av-fixed-nav-accent;
    border-right-color: transparent;
  }

  @include when(inverse) {
    background-color: rgba(#0065e3, .1);  // in the past `rgba($av-fixed-nav-accent, .1)`
    color: $av-fixed-nav-accent;
  }
}
