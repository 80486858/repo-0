@include b('grid') {
  display: -ms-grid;
  display: grid;

  @include m(inline) {
    display: -ms-inline-grid;
    display: inline-grid;
  }

  @for $i from 1 through 24 {
    @include m(rows-#{$i}) {
      -ms-grid-rows: (minmax(0, 1fr)) [#{$i}];
      grid-template-rows: repeat(#{$i}, minmax(0, 1fr));
    }

    @include m(row-span-#{$i}) {
      -ms-grid-row-span: #{$i};
      grid-row: span #{$i}/span #{$i};
    }

    @include m(row-start-#{$i}) {
      -ms-grid-row: #{$i} !important;
      grid-row-start: #{$i} !important;
    }

    @include m(row-end-#{$i}) {
      -ms-grid-row-span: #{$i} !important;
      grid-row-end: #{$i} !important;
    }

    @include m(cols-#{$i}) {
      //$val: '';
      //
      //@for $v from 1 through $i {
      //  $val: $val + 'minmax(0, 1fr) ';
      //}
      -ms-grid-columns: minmax(0, max-content) [#{$i}];
      grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
    }

    @include m(col-span-#{$i}) {
      -ms-grid-column-span: #{$i};
      grid-column: span #{$i} / span #{$i};
    }

    @include m(col-start-#{$i}) {
      -ms-grid-column: #{$i} !important;
      grid-column-start: #{$i} !important;
    }

    @include m(col-end-#{$i}) {
      -ms-grid-column-span: #{$i} !important;
      grid-column-end: #{$i} !important;
    }
  }
}

.el-grid-rows-none {
  -ms-grid-rows: none;
  grid-template-rows: none;
}

.el-grid-rows-auto {
  grid-auto-rows: auto;
}

.el-grid-rows-min {
  grid-auto-rows: -webkit-min-content;
  grid-auto-rows: min-content;
}

.el-grid-rows-max {
  grid-auto-rows: -webkit-max-content;
  grid-auto-rows: max-content;
}

.el-grid-rows-fr {
  grid-auto-rows: minmax(0, 1fr);
}

.el-grid-row-auto {
  grid-row: auto;
}

.el-grid-row-span-full {
  grid-row: 1 / -1;
}

.el-grid-row-start-auto {
  -ms-grid-row: auto;
  grid-row-start: auto;
}

.el-grid-row-end-auto {
  -ms-grid-row-span: auto;
  grid-row-end: auto;
}

.el-grid-cols-none {
  -ms-grid-columns: none;
  grid-template-columns: none;
}

.el-grid-cols-auto {
  grid-auto-columns: auto;
}

.el-grid-cols-min {
  grid-auto-columns: -webkit-min-content;
  grid-auto-columns: min-content;
}

.el-grid-cols-max {
  grid-auto-columns: -webkit-max-content;
  grid-auto-columns: max-content;
}

.el-grid-cols-fr {
  grid-auto-columns: minmax(0, 1fr);
}

.el-grid-col-auto {
  grid-column: auto;
}

.el-grid-col-span-full {
  grid-column: 1 / -1;
}

.el-grid-col-start-auto {
  -ms-grid-column: auto;
  grid-column-start: auto;
}

.el-grid-col-end-auto {
  -ms-grid-column-span: auto;
  grid-column-end: auto;
}

.el-grid--flow-row { grid-auto-flow: row; }
.el-grid--flow-col { grid-auto-flow: column; }
.el-grid--flow-row-dense { grid-auto-flow: row dense; }
.el-grid--flow-col-dense { grid-auto-flow: column dense; }
.el-grid--cols-auto-auto { grid-auto-columns: auto; }
.el-grid--cols-auto-min { grid-auto-columns: min-content; }
.el-grid--cols-auto-max { grid-auto-columns: max-content; }
.el-grid--cols-auto-fr { grid-auto-columns: minmax(0, 1fr); }
.el-grid--rows-auto-auto { grid-auto-rows: auto; }
.el-grid--rows-auto-min { grid-auto-rows: min-content; }
.el-grid--rows-auto-max { grid-auto-rows: max-content; }
.el-grid--rows-auto-fr { grid-auto-rows: minmax(0, 1fr); }

@each $gap in (0 8 16 24 32 48 56 64) {
  .el-grid--gap-#{$gap} {
    grid-gap: #{$gap}px;
    gap: #{$gap}px;
  }
  .el-grid--column-gap-#{$gap} {
    grid-column-gap: #{$gap}px;
    column-gap: #{$gap}px;
  }
  .el-grid--row-gap-#{$gap} {
    grid-row-gap: #{$gap}px;
    row-gap: #{$gap}px;
  }
}
