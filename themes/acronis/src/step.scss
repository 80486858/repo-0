@import 'common/variables';
@import 'common/mixins';

@include b(step) {
  position: relative;
  flex-shrink: 1;

  @include pseudo(last-of-type) {
    @include e(line) {
      display: none;
    }

    @include when(flex) {
      flex-basis: auto !important;
      flex-shrink: 0;
      flex-grow: 0;
    }

    @include e((main, description)) {
      padding-right: 0;
    }
  }

  @include when(clickable) {
    cursor: pointer;
  }

  @include e(head) {
    // @fixme: define correct color
    @import './common/variables/colors-sass'; /* stylelint-disable-line no-duplicate-at-import-rules */

    position: relative;
    width: 100%;
    color: rgba($av-brand-primary, .7);
    border-color: $av-brand-light;

    @include when(process) {
      color: $av-brand-primary;
      border-color: $av-brand-primary;
    }

    @include when(wait) {
      color: $av-brand-light;
      border-color: $av-brand-light;
    }

    @include when(success) {
      color: $av-fixed-success;
      border-color: $av-fixed-success;
    }

    @include when(error) {
      color: $av-fixed-danger;
      border-color: $av-fixed-danger;
    }

    @include when(finish) {
      color: $av-brand-primary;
      border-color: $av-brand-primary;
    }
  }

  @include when(numeric) {
    @include e(icon) {
      width: 24px;
      height: 24px;
    }
  }

  @include e(icon) {
    position: relative;
    z-index: $av-z-index-normal;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
    width: 10px;
    height: 10px;
    font-size: $av-font-size-xs;
    box-sizing: border-box;
    // transition: .15s ease-out;
    background: $av-fixed-white;

    @include when(text) {
      border-radius: $av-border-radius-circle;
      border: $av-border-md;
      border-color: inherit;
    }

    @include when(icon) {
      width: 40px;
      height: auto;
    }
  }

  @include e(icon-inner) {
    display: inline-block;
    user-select: none;
    text-align: center;
    font-weight: $av-font-weight-bold;
    line-height: $av-line-height-xs;
    color: inherit;

    &[class*=el-icon]:not(.is-status) {
      font-size: 25px;
      font-weight: $av-font-weight-normal;
    }

    @include when(status) {
      transform: translateY(1px);
    }
  }

  @include e(line) {
    position: absolute;
    border-color: inherit;
    background-color: $av-brand-light;
  }

  @include e(line-inner) {
    display: block;
    border: $av-border-sm;
    border-color: inherit;
    // transition: .15s ease-out;
    box-sizing: border-box;
    width: 0;
    height: 0;
  }

  @include e(main) {
    white-space: normal;
    text-align: left;
  }

  @include e(title) {
    font-size: $av-font-size-xs;
    line-height: $av-line-height-s;

    @include when(process) {
      font-weight: $av-font-weight-bold;
      color: $av-fixed-primary;
    }

    @include when(wait) {
      // @fixme: define correct color
      @import './common/variables/colors-sass'; /* stylelint-disable-line no-duplicate-at-import-rules */

      color: rgba($av-brand-primary, .7);
    }

    @include when(success) {
      color: $av-fixed-success;
    }

    @include when(error) {
      color: $av-fixed-danger;
    }

    @include when(finish) {
      color: $av-brand-primary;
    }
  }

  @include e(description) {
    padding-right: 10%;
    margin-top: -5px;
    font-size: $av-font-size-xxs;
    line-height: $av-line-height-s;
    font-weight: $av-font-weight-normal;

    @include when(process) {
      color: $av-fixed-primary;
    }

    @include when(wait) {
      // @fixme: define correct color
      @import './common/variables/colors-sass'; /* stylelint-disable-line no-duplicate-at-import-rules */

      color: rgba($av-brand-primary, .7);
    }

    @include when(success) {
      color: $av-fixed-success;
    }

    @include when(error) {
      color: $av-fixed-danger;
    }

    @include when(finish) {
      color: $av-brand-primary;
    }
  }

  @include when(horizontal) {
    display: inline-block;

    @include e(line) {
      height: 2px;
      top: 11px;
      left: 0;
      right: 0;
    }
  }

  @include when(vertical) {
    display: flex;

    @include e(head) {
      flex-grow: 0;
      width: 24px;
      margin-right: 11px;
      display: flex;
      flex-direction: column-reverse;
      align-items: center;
      justify-content: flex-end;
    }

    @include e(main) {
      flex-grow: 1;
    }

    @include e(title) {
      margin-top: -7px;
      line-height: $av-line-height-s;
    }

    @include e(line-inner) {
      position: absolute;
      border-right-width: 0 !important;
    }

    @include e(line) {
      position: relative;
      flex: 1 1 auto;
      width: 1px;
      margin: 3px 0;
    }

    @include e(icon) {
      flex: 0 1 auto;

      @include when(icon) {
        width: 24px;
      }
    }
  }

  @include when(center) {
    @include e(head) {
      text-align: center;
    }

    @include e(main) {
      text-align: center;
    }

    @include e(description) {
      padding-left: 20%;
      padding-right: 20%;
    }

    @include e(line) {
      left: 50%;
      right: -50%;
    }
  }

  @include when(simple) {
    display: flex;
    align-items: center;

    @include e(head) {
      width: auto;
      font-size: 0;
      padding-right: 10px;
    }

    @include e(icon) {
      background: transparent;
      width: 16px;
      height: 16px;
      font-size: $av-font-size-xxs;
    }

    @include e(icon-inner) {
      &[class*=el-icon]:not(.is-status) {
        font-size: $av-font-size-m;
      }

      &.is-status {
        transform: scale(.8) translateY(1px);
      }
    }

    @include e(main) {
      position: relative;
      display: flex;
      align-items: stretch;
      flex-grow: 1;
    }

    @include e(title) {
      font-size: $av-font-size-s;
      line-height: $av-line-height-s;
    }

    @include pseudo('not(:last-of-type)') {
      @include e(title) {
        max-width: 50%;
        word-break: break-all;
      }
    }

    @include e(arrow) {
      flex-grow: 1;
      display: flex;
      align-items: center;
      justify-content: center;

      &::before,
      &::after {
        content: '';
        display: inline-block;
        position: absolute;
        height: 15px;
        width: 1px;
        background: $av-fixed-primary;
      }

      &::before {
        transform: rotate(-45deg) translateY(-4px);
        transform-origin: 0 0;
      }

      &::after {
        transform: rotate(45deg) translateY(4px);
        transform-origin: 100% 100%;
      }
    }

    @include pseudo(last-of-type) {
      @include e(arrow) {
        display: none;
      }
    }
  }
}
