@import 'common/variables';
@import 'common/mixins';

$switch-width: 48px;
$switch-height: 24px;
$switch-width-small: 32px;
$switch-height-small: 16px;

@include b(switch) {
  display: inline-block;
  vertical-align: middle;
  max-width: 100%;
  position: relative;
  cursor: pointer;
  outline: none;
  user-select: none;

  @include e(content) {
    display: flex;
    align-items: center;
    height: inherit;
  }

  @include e(input) {
    position: absolute;
    width: 0;
    height: 0;
    margin: 0;
    opacity: 0;
  }

  @include e(control) {
    box-sizing: border-box;
    min-width: $switch-width;
    width: $switch-width;
    height: $switch-height;
    border-radius: $switch-height;
    background-color: $av-brand-light;
    position: relative;
    display: inline-block;
    // transition: border-color .3s, background-color .3s;

    @include m(small) {
      min-width: $switch-width-small;
      width: $switch-width-small;
      height: $switch-height-small;
      border-radius: $switch-height-small;

      &::before {
        width: 12px !important;
        height: 12px !important;
        top: 2px !important;
        left: 2px !important;
      }
    }

    &::before {
      content: '';
      display: block;
      width: 18px;
      height: 18px;
      border-radius: $av-border-radius-circle;
      background-color: $av-light;
      position: absolute;
      top: 3px;
      left: 3px;
      // transition: transform .3s;
    }
  }

  @include e(label) {
    padding: 0 0 0 8px;
  }

  @include when(disabled) {
    color: $av-fixed-lighter;
    cursor: default;

    .el-switch__control {
      background-color: $av-brand-accent;

      &::before {
        background-color: $av-fixed-white-light;
      }
    }
  }

  @include when(focus) {
    .el-switch__control {
      box-shadow: 0 0 0 $av-border-width-md $av-fixed-focus;
    }
  }

  @include when(checked) {
    .el-switch__control {
      background-color: $av-fixed-success;

      @include m(small) {
        &::before {
          transform: translate3d($switch-width-small * .5, 0, 0) !important;
        }
      }

      &::before {
        transform: translate3d($switch-width * .5, 0, 0);
      }
    }

    &.is-disabled {
      .el-switch__control {
        background-color: $av-fixed-success-accent;
      }
    }
  }

  @include when(reverse) {
    .el-switch__content {
      flex-direction: row-reverse;
    }

    .el-switch__label {
      padding: 0 8px 0 0;
    }
  }
}
