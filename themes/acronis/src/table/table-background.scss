$table-background-colors: (
  solid-brand-lightest: (
    background: $av-solid-brand-lightest,
    hover: color-mix(in oklab, $av-brand-primary 5%, $av-solid-brand-lightest),
    selected: $av-solid-brand-accent,
    selected-hover: color-mix(in oklab, $av-brand-primary 5%, $av-solid-brand-accent),
    border: $el-solid-secondary-active,
    group: $av-solid-brand-accent,
    dark-background: $av-solid-brand-lightest,
    dark-hover: $av-solid-brand-lightest,
    dark-selected: $av-solid-brand-lightest,
    dark-selected-hover: $av-solid-brand-lightest,
    dark-border: $av-solid-brand-lighter
  ),
  fixed-white: (
    background: $av-fixed-white,
    hover: $av-solid-brand-lightest,
    selected: $av-solid-brand-lightest,
    selected-hover: color-mix(in oklab, $av-brand-primary 5%, $av-solid-brand-accent),
    border: $el-solid-secondary-active,
    dark-background: $av-fixed-white,
    dark-border: $av-solid-brand-lightest
  ),
  transparent-color: (
    background: var(--table_bgcolor),
    hover: custom-lighten(--table_bgcolor, -15),
    selected: custom-lighten(--table_bgcolor, 5),
    selected-hover: custom-lighten(--table_bgcolor, -5),
    border: custom-lighten(--table_bgcolor, 15),
    text-color: opposite-color(--table_bgcolor),
    darkBackground: $av-fixed-white,
    darkBorder: $av-solid-brand-lightest
  )
);

@mixin background-modifiers($colors) {
  @each $key, $value in $colors {
    @include background-modifier($key, $value);
  }
}

@mixin background-modifier($bgName, $color) {
  @at-root {
    $table-background-color: map-get($color, 'background');
    $table-hover-color: map-get($color, 'hover');
    $table-selected-color: map-get($color, 'selected');
    $table-selected-hover-color: map-get($color, 'selected-hover');
    $table-border-color: map-get($color, 'border');
    $table-text-color: map-get($color, 'text-color');
    $table-group-background-color: map-get($color, 'group');

    #{&}--bgcolor-#{$bgName} {
      background-color: $table-background-color;

      @include e(rows-group-header) {
        .el-table__cell {
          background-color: $table-group-background-color;
        }
      }

      @include e((head_cell, cell)) {
        &.is-sticky {
          //border-left: $av-border-sm $table-background-color;
          background-color: $table-background-color;
        }

        // when column is hovered(ie. sortable)
        @include when(column-hovered) {
          background-color: $table-hover-color;
        }

        &.is-bordered-left-hidden {
          border-left: $av-border-sm $table-background-color;
          border-left: $av-border-sm transparent;
        }

        &.is-bordered-right-hidden {
          border-right: $av-border-sm $table-background-color;
          border-right: $av-border-sm transparent;
        }

        &.is-bordered-right {
          border-right-color: $table-border-color;
        }

        &.is-bordered-left {
          border-left-color: $table-border-color;
        }

        @include when(bordered-bottom) {
          border-bottom: $av-border-sm $table-border-color;
        }

        background-color: #{$table-background-color};
        color: #{$table-text-color};
      }

      @include e(head_cell) {
        border-bottom: $av-border-sm $table-border-color;
      }

      .el-table__row {
        &.is-selectable,
        &.is-highlightable {
          &:not(.is-selected):not(.is-current):hover {
            position: relative;
            background-color: $table-hover-color !important;

            .el-table__cell,
            .el-table__cell.is-sticky {
              background-color: $table-hover-color !important;
            }
          }

          &.is-selected:hover,
          &.is-current:hover {
            .el-table__cell,
            .el-table__cell.is-sticky {
              background-color: $table-selected-hover-color !important;
            }
          }

          // Cell in a row that selected and hovered for the sorting at the same time
          &.is-selected,
          &.is-current {
            .el-table__cell,
            .el-table__cell.is-sticky {
              &.is-column-hovered {
                background-color: $table-selected-hover-color;
              }
            }
          }

          &.is-focused,
          &:focus,
          &:not(.is-selected):not(.is-current):hover:focus,
          &.is-current:hover:focus,
          &.is-selected:hover:focus,
          &.is-current:focus,
          &:hover:focus {
            .el-table__cell {
              background-color: $av-fixed-focus !important;

              &.is-bordered-left-hidden {
                border-left-color: $av-fixed-focus;
              }

              &.is-bordered-right-hidden {
                border-right-color: $av-fixed-focus;
              }
            }
          }
        }

        @include when(hovered) {
          .el-table__cell {
            background-color: $table-hover-color;

            &.is-bordered-left-hidden {
              border-left-color: $table-hover-color;
            }

            &.is-bordered-right-hidden {
              border-right-color: $table-hover-color;
            }
          }
        }

        @include when((selected, current)) {
          .el-table__cell {
            background-color: $table-selected-color;

            &.is-bordered-left-hidden {
              border-left-color: $table-selected-color;
            }

            &.is-bordered-right-hidden {
              border-right-color: $table-selected-color;
            }
          }

          &:hover {
            .el-table__cell,
            .el-table__cell.is-sticky {
              &.is-bordered-left-hidden {
                border-left-color: $table-selected-hover-color;
              }

              &.is-bordered-right-hidden {
                border-right-color: $table-selected-hover-color;
              }
            }
          }
        }
      }
    }
  }
}

@include b(table) {
  @include background-modifiers($table-background-colors);
}
