@import '../common/variables';
@import '../common/mixins';

@include b(table) {
  @include e(cell) {
    overflow: hidden;
    text-overflow: ellipsis;
    display: inline-flex;
    align-items: center;
    border-bottom: $av-border-sm transparent;

    &_content,
    &_slot {
      display: flex;
      width: 100%;
    }
  }

  @include e(selection-cell-checkbox-wrapper) {
    width: 32px;
    height: 32px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex: 0 0 auto;
    border-radius: 4px;
    background-color: transparent;
  }

  @include e((head_cell, cell)) {
    display: table-cell;
    text-align: left;
    vertical-align: middle;
    min-width: 48px;
    padding: 8px 24px 7px;
    line-height: $av-line-height-m;
    background-clip: padding-box;
    box-sizing: border-box;
    position: relative;

    &_content,
    &_slot {
      @include utils-ellipsis;

      display: flex;
      align-items: center;
      justify-content: inherit;
      height: 100%;
      min-width: 0;
      z-index: 1;
    }

    &_content {
      @include when(blank) {
        display: none;
      }
    }

    &_text {
      @include utils-ellipsis;

      max-width: 100%;
    }

    &.is-sticky {
      position: sticky;
      z-index: 1;
    }

    &.ie-sticky-polyfill {
      position: absolute;
      z-index: $av-z-index-normal;
      height: 48px;

      &.ie-sticky-polyfill-left {
        left: 0;
      }

      &.ie-sticky-polyfill-right {
        right: 0;
      }
    }

    //&.is-selection,
    &.is-clickable {
      &:not(.is-disabled):hover {
        cursor: pointer;

        &::before {
          background-color: $av-brand-lightest;
        }
      }
    }

    &.is-align-left {
      text-align: left;
      justify-content: flex-start;
    }

    &.is-align-right {
      text-align: right;
      justify-content: flex-end;
    }

    &.is-align-center {
      text-align: center;
      justify-content: center;
    }

    &.is-align-stretch &_slot {
      flex: 1;
    }

    &:first-of-type.is-selection {
      padding: 0 16px;
      text-overflow: initial;
    }

    &.is-index {
      text-overflow: initial;
    }

    @include when(bordered-right) {
      border-right: $av-border-sm $av-solid-brand-lighter;
    }

    @include when(bordered-left) {
      border-left: $av-border-sm $av-solid-brand-lighter;
    }

    @include when(bordered-bottom) {
      border-bottom: $av-border-sm $av-solid-brand-lighter;
    }

    @include when(column-hovered) {
      @include when(resizable) {
        // render the right border for the cell without border
        &:not(.is-bordered-right) {
          border-right: none;

          // but not show border for last scroll column when there is fixed-right column
          @include when(last-scroll-column) {
            border-right: none;
          }
        }

        &:last-of-type {
          border-right: none;
        }
      }
    }

    @include when(hidden) {
      > * {
        visibility: hidden;
      }
    }

    @include when(actions-column) {
      padding: 0 16px;
      text-overflow: initial;

      .el-dropdown {
        min-width: 32px;
      }
    }

    @include when(expandable) {
      padding-left: 14px;
      padding-right: 14px;
    }

    .is-group-row-selection {
      margin-left: 40px !important;
    }
  }
}
